// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è user1
// –ó–∞–ø—É—Å–∫: node scripts/create-user1.js

const { createClient } = require('@supabase/supabase-js')

// –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ Supabase
const SUPABASE_URL = 'YOUR_SUPABASE_URL'
const SUPABASE_SERVICE_ROLE_KEY = 'YOUR_SERVICE_ROLE_KEY'

const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

async function createUser1() {
  console.log('–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è user1...')
  
  try {
    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: authData, error: authError } = await supabase.auth.admin.createUser({
      email: 'user1@examplemail.com',
      password: 'user123',
      email_confirm: true,
      user_metadata: {
        full_name: 'User One',
        company: 'Nike'
      }
    })

    if (authError) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authError.message)
      return
    }

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å user1@examplemail.com —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ')
    console.log(`   ID: ${authData.user.id}`)
    console.log(`   –ò–º—è: User One`)
    console.log(`   –ö–æ–º–ø–∞–Ω–∏—è: Nike`)

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ —Ç–∞–±–ª–∏—Ü–µ profiles
    const { error: profileError } = await supabase
      .from('profiles')
      .upsert({
        id: authData.user.id,
        email: 'user1@examplemail.com',
        full_name: 'User One',
        company: 'Nike'
      })

    if (profileError) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', profileError.message)
    } else {
      console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –¥–ª—è user1 –æ–±–Ω–æ–≤–ª–µ–Ω')
    }

    console.log('\nüéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å user1 —Å–æ–∑–¥–∞–Ω!')
    console.log('–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ —Å:')
    console.log('Email: user1@examplemail.com')
    console.log('Password: user123')

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.message)
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
createUser1().catch(console.error) 