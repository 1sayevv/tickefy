// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
// –ó–∞–ø—É—Å–∫: node scripts/create-test-users.js

const { createClient } = require('@supabase/supabase-js')

// –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ Supabase
const SUPABASE_URL = 'YOUR_SUPABASE_URL'
const SUPABASE_SERVICE_ROLE_KEY = 'YOUR_SERVICE_ROLE_KEY'

const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

const testUsers = [
  {
    email: 'user1@examplemail.com',
    password: 'user123',
    full_name: 'User One',
    company: 'Nike'
  },
  {
    email: 'user2@examplemail.com',
    password: 'user213',
    full_name: 'User Two',
    company: 'Adidas'
  }
]

async function createTestUsers() {
  console.log('–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
  
  for (const userData of testUsers) {
    try {
      console.log(`\n–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userData.email}`)
      
      // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: authData, error: authError } = await supabase.auth.admin.createUser({
        email: userData.email,
        password: userData.password,
        email_confirm: true,
        user_metadata: {
          full_name: userData.full_name,
          company: userData.company
        }
      })

      if (authError) {
        console.error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userData.email}:`, authError.message)
        continue
      }

      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.email} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ`)
      console.log(`   ID: ${authData.user.id}`)
      console.log(`   –ò–º—è: ${userData.full_name}`)
      console.log(`   –ö–æ–º–ø–∞–Ω–∏—è: ${userData.company}`)

      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ —Ç–∞–±–ª–∏—Ü–µ profiles
      const { error: profileError } = await supabase
        .from('profiles')
        .upsert({
          id: authData.user.id,
          email: userData.email,
          full_name: userData.full_name,
          company: userData.company
        })

      if (profileError) {
        console.error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è ${userData.email}:`, profileError.message)
      } else {
        console.log(`‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –¥–ª—è ${userData.email} –æ–±–Ω–æ–≤–ª–µ–Ω`)
      }

    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userData.email}:`, error.message)
    }
  }

  console.log('\nüéâ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
  console.log('\n–¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:')
  console.log('1. user1@examplemail.com / user123 (Nike)')
  console.log('2. user2@examplemail.com / user213 (Adidas)')
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
createTestUsers().catch(console.error) 